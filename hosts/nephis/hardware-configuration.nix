# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  outputs,
  ...
}: let
  mountOpts = ["compress=zstd" "noatime"];
in {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    outputs.nixosModules.nvidia
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" "sdhci_pci"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/cfc3644e-1a81-4b45-b492-ba1a2d96ff85";
    fsType = "btrfs";
    options = ["subvol=@root"] ++ mountOpts;
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/cfc3644e-1a81-4b45-b492-ba1a2d96ff85";
    fsType = "btrfs";
    options = ["subvol=@home"] ++ mountOpts;
  };

  fileSystems."/var/log" = {
    device = "/dev/disk/by-uuid/cfc3644e-1a81-4b45-b492-ba1a2d96ff85";
    fsType = "btrfs";
    options = ["subvol=@log"] ++ mountOpts;
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/cfc3644e-1a81-4b45-b492-ba1a2d96ff85";
    fsType = "btrfs";
    options = ["subvol=@nix"] ++ mountOpts;
  };

  fileSystems."/boot/efi" = {
    device = "/dev/disk/by-uuid/4B8D-2B16";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  fileSystems."/mnt/hdd-ext4" = {
    device = "/dev/disk/by-uuid/63802ddb-8f7f-4575-8c5f-d52a32e0199d";
    fsType = "ext4";
  };

  fileSystems."/mnt/hdd-ntfs" = {
    device = "/dev/disk/by-uuid/507C58524C28C058";
    fsType = "ntfs3";
    options = ["defaults" "noauto"];
  };

  swapDevices = [];

  systemSettings.nvidia = {
    enable = true;
    prime = {
      enable = true;
      defaultMode = "sync";
      intelBusId = "PCI:0:2:0";
      nvidiaBusId = "PCI:1:0:0";
    };
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
